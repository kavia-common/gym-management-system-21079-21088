{"is_source_file": true, "format": "Python", "description": "This is the main application source file for a FastAPI-based gym management backend. It sets up the FastAPI app, including CORS middleware, defines a health check endpoint, a WebSocket usage instructions endpoint, and a WebSocket echo endpoint. The code also contains documentation for API endpoints and WebSocket interaction instructions.", "external_files": ["fastapi", "fastapi.middleware.cors", "pydantic", "typing"], "external_methods": ["fastapi.FastAPI", "fastapi.WebSocket", "fastapi.middleware.cors.CORSMiddleware", "pydantic.BaseModel", "pydantic.Field"], "published": ["create_app", "app"], "classes": [{"name": "HealthResponse", "description": "Data model for the health check response, indicating service status, name, version, and optional details."}], "methods": [{"name": "FastAPI create_app()", "description": "Creates and configures the FastAPI application with endpoints, middleware, and documentation.", "scope": "", "scopeKind": ""}, {"name": "HealthResponse health()", "description": "Health check endpoint that returns a status indicating the service is healthy.", "scope": "create_app", "scopeKind": "function"}, {"name": "Dict[str,str] websocket_usage()", "description": "Provides instructions and usage info for the WebSocket endpoint.", "scope": "create_app", "scopeKind": "function"}, {"name": "ws_echo(websocket: WebSocket)", "description": "WebSocket endpoint that echoes received messages back to the client.", "scope": "create_app", "scopeKind": "function"}], "calls": ["fastapi.FastAPI", "fastapi.WebSocket", "fastapi.middleware.cors.CORSMiddleware", "pydantic.BaseModel", "pydantic.Field", "app.add_middleware", "app.get", "app.websocket", "HealthResponse"], "search-terms": ["FastAPI app creation", "WebSocket echo endpoint", "service health check", "CORS middleware", "WebSocket usage instructions"], "state": 2, "file_id": 2, "knowledge_revision": 5, "git_revision": "", "ctags": [{"_type": "tag", "name": "HealthResponse", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/main.py", "pattern": "/^    class HealthResponse(BaseModel):$/", "file": true, "language": "Python", "kind": "class", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/main.py", "pattern": "/^app = create_app()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/main.py", "pattern": "/^def create_app() -> FastAPI:$/", "language": "Python", "typeref": "typename:FastAPI", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/main.py", "pattern": "/^    def health() -> HealthResponse:$/", "file": true, "language": "Python", "typeref": "typename:HealthResponse", "kind": "function", "signature": "()", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "service", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/main.py", "pattern": "/^        service: str = Field(..., description=\"Name of the service\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "create_app.HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/main.py", "pattern": "/^        status: str = Field(..., description=\"Status string indicating service health, e.g. 'ok'/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "create_app.HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "version", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/main.py", "pattern": "/^        version: str = Field(..., description=\"Version of the service\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "create_app.HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "websocket_usage", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/main.py", "pattern": "/^    def websocket_usage() -> Dict[str, str]:$/", "file": true, "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "function", "signature": "()", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "ws_echo", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/main.py", "pattern": "/^    async def ws_echo(websocket: WebSocket):$/", "file": true, "language": "Python", "kind": "function", "signature": "(websocket: WebSocket)", "scope": "create_app", "scopeKind": "function"}], "hash": "c285192abba34d07e7eb4e6ef36a2c12", "format-version": 4, "code-base-name": "gym_backend", "filename": "gym_backend/src/api/main.py", "fields": [{"name": "app = create_app()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str service", "scope": "create_app.HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str status", "scope": "create_app.HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str version", "scope": "create_app.HealthResponse", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"5": ""}]}