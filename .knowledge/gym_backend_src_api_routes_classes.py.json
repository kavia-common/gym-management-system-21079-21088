{"is_source_file": true, "format": "Python (FastAPI with SQLAlchemy)", "description": "This source file defines API routes for managing class schedules in a gym management system, including listing, retrieving, creating, updating, and deleting class schedules. It uses FastAPI's APIRouter, interacts with SQLAlchemy models, and includes dependencies for authentication and database sessions.", "external_files": ["src/database/connection", "src/database/models", "src/schemas/class_schedule", "src/auth/dependencies"], "external_methods": ["get_db", "get_current_admin"], "published": ["router"], "classes": [{"name": "ClassScheduleResponse", "description": "Schema for class schedule response, including booked count"}], "methods": [{"name": "list_classes( start_date: Optional[datetime] = Query(None, description=\"Filter by start date\"), end_date: Optional[datetime] = Query(None, description=\"Filter by end date\"), db: Session = Depends(get_db) )", "description": "Fetches and filters list of scheduled classes with optional date filters, including booking counts.", "scope": "", "scopeKind": ""}, {"name": "get_class(class_id: int, db: Session = Depends(get_db))", "description": "Retrieves detailed information of a specific class, including booked count.", "scope": "", "scopeKind": ""}, {"name": "create_class( class_data: ClassScheduleCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )", "description": "Creates a new class schedule, checking trainer existence and time validity.", "scope": "", "scopeKind": ""}, {"name": "update_class( class_id: int, class_data: ClassScheduleUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )", "description": "Updates an existing class schedule, with validation for times and trainer existence.", "scope": "", "scopeKind": ""}, {"name": "delete_class( class_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )", "description": "Deletes a class schedule, requiring admin privileges.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.add", "db.commit", "db.refresh", "db.delete", "ClassScheduleResponse.from_orm", "Booking.query.filter", "User", "Trainer", "ClassSchedule", "Booking", "BookingStatus"], "search-terms": ["FastAPI classes route", "SQLAlchemy ClassSchedule management", "class scheduling API", "gym classes endpoints", "class booking system"], "state": 2, "file_id": 21, "knowledge_revision": 53, "git_revision": "", "revision_history": [{"43": ""}, {"53": ""}], "ctags": [{"_type": "tag", "name": "create_class", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/classes.py", "pattern": "/^async def create_class($/", "language": "Python", "kind": "function", "signature": "( class_data: ClassScheduleCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )"}, {"_type": "tag", "name": "delete_class", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/classes.py", "pattern": "/^async def delete_class($/", "language": "Python", "kind": "function", "signature": "( class_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )"}, {"_type": "tag", "name": "get_class", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/classes.py", "pattern": "/^async def get_class(class_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(class_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_classes", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/classes.py", "pattern": "/^async def list_classes($/", "language": "Python", "kind": "function", "signature": "( start_date: Optional[datetime] = Query(None, description=\"Filter by start date\"), end_date: Optional[datetime] = Query(None, description=\"Filter by end date\"), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/classes.py", "pattern": "/^router = APIRouter(prefix=\"\\/api\\/classes\", tags=[\"Classes\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_class", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/classes.py", "pattern": "/^async def update_class($/", "language": "Python", "kind": "function", "signature": "( class_id: int, class_data: ClassScheduleUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )"}], "hash": "bdc9effa901aa48dac96d88605772806", "format-version": 4, "code-base-name": "gym_backend", "filename": "gym_backend/src/api/routes/classes.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/api\\/classes\", tags=[\"Classes\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}