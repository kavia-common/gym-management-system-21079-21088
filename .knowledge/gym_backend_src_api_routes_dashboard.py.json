{"is_source_file": true, "format": "Python (FastAPI)", "description": "This Python source file defines API routes for the dashboard features of a gym management system. It includes endpoints for admin, member, and trainer dashboards, each returning system metrics or user-specific data. The code utilizes FastAPI, SQLAlchemy ORM, and dependency injection for database sessions and user authentication.", "external_files": ["src/database/connection.py", "src/database/models.py", "src/auth/dependencies.py"], "external_methods": ["get_db", "get_current_user"], "published": ["router"], "classes": [{"name": "APIRouter", "description": "FastAPI class used to define a collection of API routes with a common prefix and tags."}], "methods": [{"name": "admin_dashboard( db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Handles GET requests to '/admin' to provide system-wide metrics such as total members, active memberships, trainers, upcoming classes, bookings, and revenue for admin users.", "scope": "", "scopeKind": ""}, {"name": "member_dashboard( db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Handles GET requests to '/member' to provide personalized dashboard data for a logged-in member, including membership info, upcoming classes, and booking statistics.", "scope": "", "scopeKind": ""}, {"name": "trainer_dashboard( db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Handles GET requests to '/trainer' to provide trainer-specific data such as upcoming classes, class bookings, and trainer profile info.", "scope": "", "scopeKind": ""}], "calls": ["db.query(User).filter(User.role == UserRole.member).count()", "db.query(Membership).filter(Membership.status == MembershipStatus.active).count()", "db.query(Trainer).count()", "db.query(ClassSchedule).filter(ClassSchedule.start_time >= now, ClassSchedule.start_time <= week_later).count()", "db.query(Booking).filter(Booking.created_at >= month_start, Booking.status == BookingStatus.confirmed).count()", "db.query(func.sum(MembershipPlan.price)).join(Membership, Membership.plan_id == MembershipPlan.id).filter(Membership.created_at >= month_start).scalar()", "db.query(Booking).order_by(Booking.created_at.desc()).limit(10).all()", "db.query(Membership).filter(Membership.member_id == current_user.id, Membership.status == MembershipStatus.active).first()", "db.query(MembershipPlan).filter(MembershipPlan.id == active_membership.plan_id).first()", "db.query(Booking).join(ClassSchedule, Booking.class_id == ClassSchedule.id).filter(Booking.member_id == current_user.id, Booking.status == BookingStatus.confirmed, ClassSchedule.start_time >= now).order_by(ClassSchedule.start_time).limit(5).all()", "db.query(Attendance).join(Booking, Attendance.booking_id == Booking.id).filter(Booking.member_id == current_user.id, Attendance.attended == True).count()", "db.query(Trainer).filter(Trainer.user_id == current_user.id).first()", "db.query(ClassSchedule).filter(ClassSchedule.trainer_id == trainer.id, ClassSchedule.start_time >= now).order_by(ClassSchedule.start_time).limit(10).all()", "db.query(Booking).filter(Booking.class_id == cls.id, Booking.status == BookingStatus.confirmed).count()", "db.query(ClassSchedule).filter(ClassSchedule.trainer_id == trainer.id).count()", "db.query(Booking).join(ClassSchedule, Booking.class_id == ClassSchedule.id).filter(ClassSchedule.trainer_id == trainer.id, Booking.status == BookingStatus.confirmed).count()"], "search-terms": ["FastAPI dashboard routes", "gym management API", "admin metrics endpoint", "member dashboard data", "trainer schedule API", "SQLAlchemy ORM gym models", "authentication dependencies", "system metrics", "class schedule", "booking count"], "state": 2, "file_id": 24, "knowledge_revision": 49, "git_revision": "", "ctags": [{"_type": "tag", "name": "admin_dashboard", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/dashboard.py", "pattern": "/^async def admin_dashboard($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "member_dashboard", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/dashboard.py", "pattern": "/^async def member_dashboard($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/dashboard.py", "pattern": "/^router = APIRouter(prefix=\"\\/api\\/dashboard\", tags=[\"Dashboard\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "trainer_dashboard", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/dashboard.py", "pattern": "/^async def trainer_dashboard($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}], "hash": "887c12bd4231909109e62d57474e3442", "format-version": 4, "code-base-name": "gym_backend", "filename": "gym_backend/src/api/routes/dashboard.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/api\\/dashboard\", tags=[\"Dashboard\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"49": ""}]}