{"is_source_file": true, "format": "Python", "description": "This is a FastAPI route module for managing gym class bookings, including listing, retrieving, creating, canceling bookings, and marking attendance, with role-based access control.", "external_files": ["src/database/connection.py", "src/database/models.py", "src/schemas/booking.py", "src/auth/dependencies.py"], "external_methods": ["get_db", "get_current_user", "get_current_admin"], "published": ["router"], "classes": [{"name": "Booking", "description": "Database model representing a booking for a gym class."}, {"name": "BookingStatus", "description": "Enumeration of possible booking statuses: confirmed, waitlisted, canceled."}, {"name": "User", "description": "Database model representing a user in the system."}, {"name": "ClassSchedule", "description": "Database model representing scheduled gym classes."}, {"name": "UserRole", "description": "Enumeration of user roles such as admin and member."}, {"name": "Attendance", "description": "Database model representing attendance records for bookings."}], "methods": [{"name": "list_bookings( db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Lists all bookings; admin sees all, users see their own.", "scope": "", "scopeKind": ""}, {"name": "get_booking( booking_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Retrieves details of a specific booking, with permission checks.", "scope": "", "scopeKind": ""}, {"name": "create_booking( booking_data: BookingCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Creates a new booking if class exists and capacity allows.", "scope": "", "scopeKind": ""}, {"name": "cancel_booking( booking_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Cancels a booking; members can cancel their own, admins any.", "scope": "", "scopeKind": ""}, {"name": "mark_attendance( attendance_data: AttendanceCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )", "description": "Marks attendance for a booking; admin only.", "scope": "", "scopeKind": ""}], "calls": ["db.query(Booking).all()", "db.query(Booking).filter(...)", "db.query(ClassSchedule).filter(...)", "db.query(Booking).filter(...).count()", "db.query(Booking).filter(...).order_by(...)", "db.commit()", "db.refresh()", "db.query(Attendance).filter(...)", "db.add()"], "search-terms": ["API Booking Routes", "Gym Class Booking API", "FastAPI bookings authorization", "create booking endpoint", "cancel booking logic", "attendance marking API", "role-based access FastAPI", "booking status handling", "waitlist promotion", "class capacity check"], "state": 2, "file_id": 23, "knowledge_revision": 47, "git_revision": "", "ctags": [{"_type": "tag", "name": "cancel_booking", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/bookings.py", "pattern": "/^async def cancel_booking($/", "language": "Python", "kind": "function", "signature": "( booking_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "create_booking", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/bookings.py", "pattern": "/^async def create_booking($/", "language": "Python", "kind": "function", "signature": "( booking_data: BookingCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "get_booking", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/bookings.py", "pattern": "/^async def get_booking($/", "language": "Python", "kind": "function", "signature": "( booking_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "list_bookings", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/bookings.py", "pattern": "/^async def list_bookings($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "mark_attendance", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/bookings.py", "pattern": "/^async def mark_attendance($/", "language": "Python", "kind": "function", "signature": "( attendance_data: AttendanceCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/bookings.py", "pattern": "/^router = APIRouter(prefix=\"\\/api\\/bookings\", tags=[\"Bookings\"])$/", "language": "Python", "kind": "variable"}], "hash": "3d99951a1dee0ad2e9d6796b5c0ab45a", "format-version": 4, "code-base-name": "gym_backend", "filename": "gym_backend/src/api/routes/bookings.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/api\\/bookings\", tags=[\"Bookings\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"47": ""}]}