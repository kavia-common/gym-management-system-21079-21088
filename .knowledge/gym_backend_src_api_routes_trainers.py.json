{"is_source_file": true, "format": "Python", "description": "This file defines API routes for managing 'Trainer' profiles in a gym management system using FastAPI, including CRUD operations and retrieval of trainer-related data.", "external_files": ["src/database/connection.py", "src/database/models.py", "src/schemas/trainer.py", "src/schemas/class_schedule.py", "src/auth/dependencies.py"], "external_methods": ["get_db", "get_current_user", "get_current_admin"], "published": ["router"], "classes": [{"name": "TrainerResponse", "description": "Schema for detailed trainer profile information returned in API responses."}, {"name": "ClassScheduleResponse", "description": "Schema for class schedule details returned for a trainer."}], "methods": [{"name": "list_trainers(db: Session = Depends(get_db))", "description": "Retrieve a list of all trainer profiles.", "scope": "", "scopeKind": ""}, {"name": "get_trainer(trainer_id: int, db: Session = Depends(get_db))", "description": "Retrieve a specific trainer profile by ID.", "scope": "", "scopeKind": ""}, {"name": "get_trainer_classes(trainer_id: int, db: Session = Depends(get_db))", "description": "Retrieve all classes associated with a specific trainer.", "scope": "", "scopeKind": ""}, {"name": "create_trainer( trainer_data: TrainerCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )", "description": "Create a new trainer profile; restricted to admins.", "scope": "", "scopeKind": ""}, {"name": "update_trainer( trainer_id: int, trainer_data: TrainerUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Update an existing trainer's profile; accessible by admins or the trainer themselves.", "scope": "", "scopeKind": ""}, {"name": "delete_trainer( trainer_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )", "description": "Delete a trainer profile; restricted to admins.", "scope": "", "scopeKind": ""}], "calls": ["db.query(Trainer).all()", "db.query(Trainer).filter(Trainer.id == trainer_id).first()", "db.query(ClassSchedule).filter(ClassSchedule.trainer_id == trainer_id).order_by(ClassSchedule.start_time).all()", "db.query(Booking).filter(Booking.class_id == cls.id, Booking.status == BookingStatus.confirmed).count()", "db.query(User).filter(User.id == trainer_data.user_id).first()", "db.query(Trainer).filter(Trainer.user_id == trainer_data.user_id).first()", "db.add(new_trainer)", "db.commit()", "db.refresh(new_trainer)", "db.query(Trainer).filter(Trainer.id == trainer_id).first()", "db.delete(trainer)"], "search-terms": ["Trainer API", "Trainer profile management", "FastAPI trainer routes", "CRUD trainers", "Gym management Trainer"], "state": 2, "file_id": 22, "knowledge_revision": 45, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_trainer", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/trainers.py", "pattern": "/^async def create_trainer($/", "language": "Python", "kind": "function", "signature": "( trainer_data: TrainerCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )"}, {"_type": "tag", "name": "delete_trainer", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/trainers.py", "pattern": "/^async def delete_trainer($/", "language": "Python", "kind": "function", "signature": "( trainer_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_admin) )"}, {"_type": "tag", "name": "get_trainer", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/trainers.py", "pattern": "/^async def get_trainer(trainer_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(trainer_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_trainer_classes", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/trainers.py", "pattern": "/^async def get_trainer_classes(trainer_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(trainer_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_trainers", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/trainers.py", "pattern": "/^async def list_trainers(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/trainers.py", "pattern": "/^router = APIRouter(prefix=\"\\/api\\/trainers\", tags=[\"Trainers\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_trainer", "path": "/home/kavia/workspace/code-generation/gym-management-system-21079-21088/gym_backend/src/api/routes/trainers.py", "pattern": "/^async def update_trainer($/", "language": "Python", "kind": "function", "signature": "( trainer_id: int, trainer_data: TrainerUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}], "hash": "79c367e92a04e176dd1378cf52fea38d", "format-version": 4, "code-base-name": "gym_backend", "filename": "gym_backend/src/api/routes/trainers.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/api\\/trainers\", tags=[\"Trainers\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"45": ""}]}